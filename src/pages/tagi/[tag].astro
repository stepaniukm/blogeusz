---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";
import Init from "@components/Init.astro";
import { getReadingTime } from "@utils/getReadingTime";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const tags = getUniqueTags(posts);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);
const postsWithReadingTime = posts.map(post => ({
  ...post,
  readingTime: getReadingTime(post.body),
}));

const tagPosts = getPostsByTag(postsWithReadingTime, tag);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Init
    title={`Tag:${tag}`}
    pageDesc={`Wszystkie artykuÅ‚y z tagiem "${tag}".`}
  />
  <ul>
    {
      tagPosts.map(({ data, readingTime }) => (
        <Card
          href={`/posty/${slugify(data)}`}
          frontmatter={data}
          readingTime={readingTime}
        />
      ))
    }
  </ul>
  <Footer />
</Layout>
